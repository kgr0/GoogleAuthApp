@model GoogleAuthApp.Models.ShowPostsModel

@{
    ViewBag.Title = "ShowOwnProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link href="@Url.Content("~/Styles/OwnProfile.css")" rel="stylesheet" type="text/css" />
    <link type="text/css" rel="stylesheet" href="~/Styles/sliderStyle.css" />
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@700&display=swap" rel="stylesheet">
</head>

@section scripts {
    @*add slider Slick*@
    <script src="~/Scripts/slick.min.js"></script>
    @*settings for slider*@
    <script src="~/Scripts/sliderSettings.js"></script>
}

<h2>My Profile</h2>

<div class="main-container">
    <div class="profile-container">
        <div class="left-sub-container">
            <div class="profile-photo-container">
                @Html.Raw("<img src=\"data:image/jpeg;base64,"
                                      + Convert.ToBase64String(ViewBag.Photo) + "\" />")
                <p class="profile-add-photo-button"> @Html.ActionLink("Add a photo", "Create", new { }, new { @class = "button" })</p>
            </div>
            <div class="profile-info-container">
                <p class="birthday">Location</p>
                <p class="birthday">@ViewBag.BirthDay</p>
            </div>

            <div>
                <a class="button" href="@Url.Action("CreatePost", "Profile")">
                    Create Post
                </a>
                <a class="button" href="@Url.Action("CreateOffer", "Profile")">
                    Create Offer
                </a>
            </div>

        </div>
        <div class="right-sub-container">
            <div class="name">
                <p>@ViewBag.FirstName @ViewBag.SecondName</p>
            </div>
            <p class="username">@ViewBag.UserName</p>
        </div>
        <div class="categories-container">
            <p class="name">Categories</p>
            <p>Category1</p>
            <p>Category2</p>
            <p>Category3</p>
            <p>Category4</p>
        </div>
    </div>

    <div>
        @foreach (var postORoffer in Model.PostsAndOffers.OrderByDescending(p => p.Date))
        {
            <hr>
            <div class="postoffername">
                <p>@postORoffer.PostOrOffer</p>
            </div>
            <div class="middle-sub-container">
                <div class="postoffer-top-container">
                    <div class="details-container">
                        <p>Details:</p>
                        <textarea readonly>@postORoffer.Text</textarea>
                    </div>
                    <div class="date-container">
                        <p>Date:</p>
                        @postORoffer.Date
                    </div>
                    <div class="postoffer-categories-container">
                        <p>Categories:</p>
                        @foreach (var category in postORoffer.Categories)
                        {
                            <p>@category.Group</p>
                        }
                    </div>
                </div>
                @if (@postORoffer.PostOrOffer.Equals("Post"))
                {   @*Post*@
                    <div class="slider">
                        @foreach (var picture in postORoffer.PostPictures)
                        {
                            <div class="slider__item">
                                @Html.Raw("<img src=\"data:image/jpeg;base64,"
                                                        + Convert.ToBase64String(picture.Picture) + "\" />")
                            </div>
                        }
                    </div>
                    <div class="postoffer-low-container">
                        <div>
                            <a href="@Url.Action("AddLikeToPost", "Profile", new { postId = postORoffer.Id, backTo = "ShowOwnProfile"} )">
                                <span>Like:</span>
                            </a>
                            @postORoffer.Likes
                        </div>
                        <div>
                            <a class="button" href="@Url.Action("EditPost", "Profile", new { Id = postORoffer.Id} )">
                                <input type="submit" value="Edit" />
                            </a>
                        </div>
                        <div>
                            <a class="button" href="@Url.Action("DeletePost", "Profile", new { postId = postORoffer.Id} )">
                                <input type="submit" value="Delete Post" />
                            </a>
                        </div>
                    </div>
                 }
                 else
                 { @*Offer*@
                 <div class="slider">
                     @foreach (var picture in postORoffer.OfferPictures)
                     {
                         <div class="slider__item">
                             @Html.Raw("<img src=\"data:image/jpeg;base64,"
                                                     + Convert.ToBase64String(picture.Picture) + "\" />")
                         </div>
                     }
                 </div>
                 <div class="postoffer-low-container">
                     <div>
                         <a href="@Url.Action("AddLikeToOffer", "Profile", new { offerId =postORoffer.Id, backTo = "ShowOwnProfile"} )">
                             <span>Like:</span>
                         </a>
                         @postORoffer.Likes
                     </div>
                     <div>
                         <a class="button" href="@Url.Action("EditOffer", "Profile", new { Id =postORoffer.Id} )">
                             <input type="submit" value="Edit" />
                         </a>
                     </div>
                     <div>
                         <a class="button" href="@Url.Action("DeleteOffer", "Profile", new { offerId = postORoffer.Id} )">
                             <input type="submit" value="Delete Offer" />
                         </a>
                     </div>
                 </div>
                 }
            </div>

         }
    </div>
</div>

