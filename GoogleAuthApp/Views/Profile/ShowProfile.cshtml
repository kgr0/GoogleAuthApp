@model GoogleAuthApp.Models.ShowPostsModel

@{ ViewBag.Title = "ShowProfile";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<head>
    <link href="@Url.Content("~/Styles/OwnProfile.css")" rel="stylesheet" type="text/css" />
    <link type="text/css" rel="stylesheet" href="~/Styles/sliderStyle.css" />
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@700&display=swap" rel="stylesheet">
</head>

@section scripts {
    @*add slider Slick*@
    <script src="~/Scripts/slick.min.js"></script>
    @*settings for slider*@
    <script src="~/Scripts/sliderSettings.js"></script>
}


<div class="main-container">
    <div class="profile-container">
        <div class="left-sub-container">
            <div class="categories-container">
                @*<div class="profile-info-container">
                    <p class="birthday">@ViewBag.BirthDay</p>
                </div>*@
                @foreach (var category in Model.Categories)
                {
                    <p class="category-circule">@category.Group</p>}
            </div>
        </div>
        <div class="middle-sub-container">
            <div class="profile-photo-container">
                @Html.Raw("<img src=\"data:image/jpeg;base64,"
                                            + Convert.ToBase64String(ViewBag.Photo) + "\" />")
            </div>
            <div class="name-under-photo-container">
                <p>@ViewBag.FirstName @ViewBag.SecondName</p>
                <p class="username">@ViewBag.UserName</p>
            </div>
        </div>
        <div class="right-sub-container">
            <div class="right-sub-container-information">
                <div class="elem-container">
                    <p>@Model.OffersAmount</p>
                    <p>Offers</p>
                </div>
                <div class="vertical"></div>
                <div class="elem-container">
                    <p>@Model.PostsAmount</p>
                    <p>Posts</p>
                </div>
                <div class="vertical"></div>
                <div class="elem-container">
                    <p>@Model.FollowersAmount</p>
                    <p>Followers</p>
                </div>
                <div class="vertical"></div>
                <div class="elem-container">
                    <button class="flag-container"></button>
                    <p class="flag-name">Poland</p>
                </div>
            </div>
            <div class="right-sub-container-buttons">
                <a class="button ocean" href="@Url.Action("CheckChatGroupAndOpenChatWith", "Chat", new { userId = @ViewBag.UserId} )">
                    Send Message
                </a>
                @if (Model.Follow)
                {
                    <a class="button follow-clicked" href="@Url.Action("StopFollow", "Profile", new { followId = @ViewBag.UserId} )">
                        Following
                    </a>
                }
                else
                {
                    <a class="button purpule" href="@Url.Action("StartFollow", "Profile", new { followId = @ViewBag.UserId} )">
                        Follow
                    </a>
                }
            </div>
        </div>
   </div>

    <div>
        @foreach (var postORoffer in Model.PostsAndOffers.OrderByDescending(p => p.Date))
        {
            <hr>
            <div class="postoffername">
                <p>@postORoffer.PostOrOffer</p>
            </div>
            <div class="low-sub-container">
                <div class="postoffer-top-container">
                        <textarea readonly class="details-container">@postORoffer.Text</textarea>
                </div>
                @if (@postORoffer.PostOrOffer.Equals("Post"))
                {@*Post*@
                    <div class="slider">
                        @foreach (var picture in postORoffer.PostPictures)
                        {
                            <div class="slider__item">
                                @Html.Raw("<img src=\"data:image/jpeg;base64,"
                                                        + Convert.ToBase64String(picture.Picture) + "\" />")
                            </div>
                        }
                    </div>
                    <div class="postoffer-low-container">
                        <div>
                            <hr class="hr-offerProfile">
                            <div class="categories-container">
                                @foreach (var category in postORoffer.Categories)
                                {
                                     <p class="category-circule">@category.Group</p>}
                            </div>
                            <hr class="hr-offerProfile">
                        </div>
                        <div class="postoffer-low-container-bottom-section">
                            <div>
                                @postORoffer.Date
                            </div>
                            <div class="like-conteiner">
                                <a href="@Url.Action("AddLikeToPost", "Profile", new { postId =postORoffer.Id, backTo = "ShowProfile", profileUserId = @ViewBag.UserId } )">
                                    <span>Like:</span>
                                </a>
                                @postORoffer.Likes
                            </div>
                        </div>
                    </div> }
                else
                { @*Offer*@
                    <div class="slider">
                        @foreach (var picture in postORoffer.OfferPictures)
                        {
                            <div class="slider__item">
                                @Html.Raw("<img src=\"data:image/jpeg;base64,"
                                                       + Convert.ToBase64String(picture.Picture) + "\" />")
                            </div>}
                    </div>
                    <div class="postoffer-low-container">
                        <div>
                            <hr class="hr-offerProfile">
                            <div class="categories-container">
                                @foreach (var category in postORoffer.Categories)
                                {
                                    <p class="category-circule">@category.Group</p>
                                }
                            </div>
                            <hr class="hr-offerProfile">
                        </div>
                    </div>
                    <div class="postoffer-low-container-bottom-section">
                        <div>
                            @postORoffer.Date
                        </div>
                        <div class="like-conteiner">
                            <a href="@Url.Action("AddLikeToOffer", "Profile", new { offerId =postORoffer.Id, backTo = "ShowProfile", profileUserId = @ViewBag.UserId } )">
                                <span>Like:</span>
                            </a>
                            @postORoffer.Likes
                        </div>
                    </div>
                }
            </div>
         }
    </div>
</div>

